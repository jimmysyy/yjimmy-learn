import{_ as n,p as s,q as a,a1 as p}from"./framework-5866ffd3.js";const t={},o=p(`<h2 id="一、数组简介" tabindex="-1"><a class="header-anchor" href="#一、数组简介" aria-hidden="true">#</a> 一、数组简介</h2><p>日常使用的三个对象</p><p><strong>1.内建对象</strong> <strong>2.宿主对象</strong> 3.自定义对象</p><p><strong>数组（Arrey）</strong></p><ul><li>数组也是一个对象，它和我们普通对象功能类似，也是用来存储一些值的</li><li>不同的是普通对象是使用字符串作为属性名的，而数组时使用数字来作为索引操作元素</li><li>索引：从0开始的整数就是索引</li><li>数组的存储性能比普通对象要好，在开发中我们经常使用数组来存储一些数据</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//创建数组对象</span>
<span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Arrey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//使用typeof检查一个数组时，会返回object</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> arr<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//向数组中添加元素</span>
<span class="token comment">//语法:数组[索引] = 值</span>
arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">32</span><span class="token punctuation">;</span>
arr<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">33</span><span class="token punctuation">;</span>
arr<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">=</span> <span class="token number">532</span><span class="token punctuation">;</span>
<span class="token comment">//读取数组元素：数组[索引] 如果读取不存在的索引，他不会报错而是返回undefined</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//获取数组的长度:可以使用length属性来获取数组的长度(元素的个数)</span>
<span class="token comment">//语法：数组.length</span>
<span class="token comment">/*对于连续的数组，使用length可以获取到数组的长度（元素的个数）,对于非连续的数组，使用length会获取到数组的最大的索引+1,尽量不要创建非连续的数组*/</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">/*
修改length:如果修改的length大于原长度，则多出部分会空出来,如果修改的length小于原长度，则多出的元素会被删除
*/</span>
arr<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
arr<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>

<span class="token comment">//向数组的最后一个位置添加元素:  数组[数组.length] = 值;</span>
arr<span class="token punctuation">[</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">70</span><span class="token punctuation">;</span>
arr<span class="token punctuation">[</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">80</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二、数组的字面量" tabindex="-1"><a class="header-anchor" href="#二、数组的字面量" aria-hidden="true">#</a> 二、数组的字面量</h2><p>使用字面量来创建数组</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">//使用字面量创建数组时，可以在创建时就指定数组中的元素</span>
<span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用构造函数创建数组时，也可以同时添加元素，将要添加的元素作为构造函数的参数传递</p><p>元素之间使用,隔开</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> arr2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//创建一个数组数组中只有一个元素10</span>
arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">//创建一个长度为10的数组</span>
arr2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>数组中的元素可以是任意的数据类型</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token keyword">undefined</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">//也可以是对象</span>
<span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&quot;孙悟空&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
arr<span class="token punctuation">[</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">]</span> <span class="token operator">=</span> obj<span class="token punctuation">;</span>
arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&quot;孙悟空&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&quot;沙和尚&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&quot;猪八戒&quot;</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">//也可以是一个函数</span>
arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">//数组中也可以放数组，如下这种数组我们称为二维数组</span>
arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、数组的方法" tabindex="-1"><a class="header-anchor" href="#三、数组的方法" aria-hidden="true">#</a> 三、数组的方法</h2><p><strong>push()</strong></p><ul><li>该方法可以向数组的末尾添加一个或多个元素，并返回数组的新的长度</li><li>可以将要添加的元素作为方法的参数传递，这样这些元素将会自动添加到数组的末尾</li><li>该方法会将数组新的长度作为返回值返回</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;孙悟空&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;猪八戒&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;沙和尚&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&quot;唐僧&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;蜘蛛精&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;白骨精&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;玉兔精&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>pop()</strong></p><ul><li>该方法可以删除数组的最后一个元素,并将被删除的元素作为返回值返回</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>unshift()</strong></p><ul><li>向数组开头添加一个或多个元素，并返回新的数组长度</li><li>向前边插入元素以后，其他的元素索引会依次调整</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>arr<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token string">&quot;牛魔王&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;二郎神&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>shift()</strong></p><ul><li>可以删除数组的第一个元素，并将被删除的元素作为返回值返回</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>slice()</strong></p><ul><li><p>可以用来从数组提取指定元素</p></li><li><p>该方法不会改变元素数组，而是将截取到的元素封装到一个新数组中返回</p></li><li><p>参数：</p><p>1.截取开始的位置的索引,包含开始索引</p><p>2.截取结束的位置的索引,不包含结束索引，第二个参数可以省略不写,此时会截取从开始索引往后的所有元素</p><p>3.索引可以传递一个负值，如果传递一个负值，则从后往前计算</p><p>​ -1 倒数第一个 // -2 倒数第二个</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;孙悟空&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;猪八戒&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;沙和尚&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;唐僧&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;白骨精&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">//使用slice</span>
<span class="token keyword">var</span> result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p><strong>splice()</strong></p><ul><li><p>可以用于删除数组中的指定元素</p></li><li><p>使用splice()会影响到原数组，会将指定元素从原数组中删除，并将被删除的元素作为返回值返回</p></li><li><p>参数：</p><p>第一个，表示开始位置的索引</p><p>第二个，表示删除的数量</p><p>第三个及以后。。可以传递一些新的元素，这些元素将会自动插入到开始位置索引前边</p></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;孙悟空&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;猪八戒&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;沙和尚&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;唐僧&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;白骨精&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">&quot;牛魔王&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;铁扇公主&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;红孩儿&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="四、数组的遍历" tabindex="-1"><a class="header-anchor" href="#四、数组的遍历" aria-hidden="true">#</a> 四、数组的遍历</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//创建一个数组</span>
<span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;孙悟空&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;猪八戒&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;沙和尚&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;唐僧&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;白骨精&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">//所谓的遍历数组，就是将数组中所有的元素都取出来</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span> <span class="token punctuation">;</span> i<span class="token operator">&lt;</span>arr<span class="token punctuation">.</span>length <span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    conosole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="五、foreach-遍历数组方法" tabindex="-1"><a class="header-anchor" href="#五、foreach-遍历数组方法" aria-hidden="true">#</a> 五、forEach（遍历数组方法）</h4><p>一般我们都是使用for循环去遍历数组，JS中还为我们提供了一个方法，用来遍历数组</p><p><strong>forEach()</strong>：这个方法只支持IE8以上的浏览器，IE8及以下的浏览器均不支持该方法，所以如果需要兼容IE8，则不要使用forEach，还是使用for循环来遍历</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//创建一个数组</span>
<span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;孙悟空&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;猪八戒&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;沙和尚&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;唐僧&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;白骨精&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">//遍历</span>
arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value <span class="token punctuation">,</span> index <span class="token punctuation">,</span> obj</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>forEach()方法需要一个函数作为参数</p><ul><li>像这种函数，由我们创建但是不由我们调用的，我们称为回调函数</li><li>数组中有几个元素函数就会执行几次，每次执行时，浏览器会将遍历到的元素，以实参的形式传递进来，我们可以来定义形参，来读取这些内容</li><li>浏览器会在回调函数中传递三个参数：第一个参数，就是当前正在遍历的元素。第二个参数，就是当前正在遍历的元素的索引。第三个参数，就是正在遍历的数组</li></ul><h2 id="六、数组的剩余方法" tabindex="-1"><a class="header-anchor" href="#六、数组的剩余方法" aria-hidden="true">#</a> 六、数组的剩余方法</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//定义几个数组为下面方法做准备</span>
<span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;孙悟空&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;猪八戒&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;沙和尚&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;白骨精&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;玉兔精&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;蜘蛛精&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> arr3 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;二郎神&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;太上老君&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;玉皇大帝&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>concat()</strong></p><ul><li>可以连接两个或多个数组，并将新的数组返回，该方法不会对原数组产生影响</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>arr2<span class="token punctuation">,</span>arr3<span class="token punctuation">,</span><span class="token string">&quot;牛魔王&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;铁扇公主&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>join()</strong></p><ul><li>该方法可以将数组转换为一个字符串</li><li>该方法不会对原数组产生影响，而是将转换后的字符串作为结果返回</li><li>在join()中可以指定一个字符串作为参数，这个字符串将会成为数组中元素的连接符，如果不指定连接符，则默认使用,作为连接符</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;孙悟空&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;猪八戒&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;沙和尚&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;唐僧&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;@-@&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>reverse()</strong></p><ul><li>该方法用来反转数组（前边的去后边，后边的去前边）</li><li>该方法会直接修改原数组</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>arr<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>sort()</strong> （重点看一下）</p><ul><li>可以用来对数组中的元素进行排序</li><li>也会影响原数组，默认会按照Unicode编码进行排序</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>arr<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>即使对于纯数字的数组，使用sort()排序时，也会按照Unicode编码来排序，所以对数字进排序时，可能会得到错误的结果。</p></li><li><p>我们可以自己来指定排序的规则</p></li><li><p>我们可以在sort()添加一个回调函数，来指定排序规则，</p><p>回调函数中需要定义两个形参，浏览器将会分别使用数组中的元素作为实参去调用回调函数，使用哪个元素调用不确定，但是肯定的是在数组中a一定在b前边</p></li><li><p>浏览器会根据回调函数的返回值来决定元素的顺序，</p><p>如果返回一个大于0的值，则元素会交换位置</p><p>如果返回一个小于0的值，则元素位置不变</p><p>如果返回一个0，则认为两个元素相等，也不交换位置</p></li><li><p>如果需要升序排列，则返回 a-b</p><p>如果需要降序排列，则返回b-a</p></li></ul>`,56),e=[o];function c(l,u){return s(),a("div",null,e)}const r=n(t,[["render",c],["__file","day4.html.vue"]]);export{r as default};
