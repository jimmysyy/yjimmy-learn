import{_ as s,p as a,q as n,a1 as e}from"./framework-5866ffd3.js";const t={},p=e(`<h2 id="一、字符串与正则相关方法" tabindex="-1"><a class="header-anchor" href="#一、字符串与正则相关方法" aria-hidden="true">#</a> 一、字符串与正则相关方法</h2><p><strong>1.split()</strong></p><ul><li>可以将一个字符串拆分为一个数组</li><li>方法中可以传递一个正则表达式作为参数，这样方法将会根据正则表达式去拆分字符串</li><li>这个方法即使不指定全局匹配，也会全都插分</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//根据任意字母来将字符串拆分</span>
<span class="token keyword">var</span> result <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[A-z]</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2.search()</strong></p><ul><li>可以搜索字符串中是否含有指定内容</li><li>如果搜索到指定内容，则会返回第一次出现的索引，如果没有搜索到返回-1</li><li>它可以接受一个正则表达式作为参数，然后会根据正则表达式去检索字符串</li><li>serach()只会查找第一个，即使设置全局匹配也没用</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>str <span class="token operator">=</span> <span class="token string">&quot;hello abc hello aec afc&quot;</span><span class="token punctuation">;</span>
<span class="token comment">//搜索字符串中是否含有 abc 或 aec 或 afc</span>
result <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">a[bef]c</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>3.match()</strong></p><ul><li>可以根据正则表达式，从一个字符串中将符合条件的内容提取出来</li><li>默认情况下我们的match只会找到第一个符合要求的内容，找到以后就停止检索，我们可以设置正则表达式为全局匹配模式，这样就会匹配到所有的内容，可以为一个正则表达式设置多个匹配模式，且顺序无所谓</li><li>match()会将匹配到的内容封装到一个数组中返回，即使只查询到一个结果</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>str <span class="token operator">=</span> <span class="token string">&quot;1a2a3a4a5e6f7A8B9C&quot;</span><span class="token punctuation">;</span>
result <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[a-z]</span><span class="token regex-delimiter">/</span><span class="token regex-flags">ig</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>4.replace()</strong></p><ul><li><p>可以将字符串中指定内容替换为新的内容</p></li><li><p>参数：</p><p>1.被替换的内容，可以接受一个正则表达式作为参数</p><p>2.新的内容</p></li><li><p>默认只会替换第一个</p></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>result <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[a-z]</span><span class="token regex-delimiter">/</span><span class="token regex-flags">gi</span></span> <span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>二、正则表达式（1）</p>`,14),l=[p];function c(i,o){return a(),n("div",null,l)}const u=s(t,[["render",c],["__file","day7.html.vue"]]);export{u as default};
